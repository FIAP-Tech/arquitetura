services:
  tech5-authserver:
    image: 'tech5-authserver:latest'
    build:
      context: ../tech5-authserver
    container_name: tech5-authserver
    networks:
      spring-network:
        ipv4_address: 172.22.0.150
    ports:
      - 10800:10800
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATASOURCE_URL=jdbc:postgresql://db:5432/db_authorization
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}


  tech5-api-gateway:
    image: 'tech5-api-gateway:latest'
    build:
      context: ../tech5-api-gateway
    container_name: tech5-api-gateway
    networks:
      - spring-network
    ports:
      - 8080:8080
    restart: always
    depends_on:
      tech5-authserver:
        condition: service_started
    environment:
      - ISSUER_URI=http://tech5-authserver:10800
      - URL_PRODUTOS=http://tech5-gestao-itens-app:8081
      - URL_CLIENTES=http://tech5-clientes-app:8082
      - URL_PEDIDOS=http://tech5-pedidos-app:8083
      - URL_ENTREGAS=http://tech5-entregas-app:8084
      - URL_PAGAMENTOS=http://tech5-pagamentos-app:8085


  tech5-gestao-itens-app:
    image: 'tech5-gestao-itens-app:latest'
    build:
      context: ../tech5-gestao-itens-app
    container_name: tech5-gestao-itens-app
    networks:
      - spring-network
    ports:
      - 8081:8081
    restart: always
    depends_on:
      db:
        condition: service_healthy
      tech5-authserver:
        condition: service_started
    environment:
      - DATASOURCE_URL=jdbc:postgresql://db:5432/db_produtos
      - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
      - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
      - ISSUER_URI=http://tech5-authserver:10800

  #   tech5-clientes-app:
  #     image: 'tech5-clientes-app:latest'
  #     build:
  #       context: ../tech5-clientes-app
  #     container_name: tech5-clientes-app
  #     ports:
  #       - 8082:8082
  #     depends_on:
  #       db:
  #         condition: service_healthy
  #     environment:
  #       - DATASOURCE_URL=jdbc:postgresql://db:5432/db_clientes
  #       - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
  #       - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
  #       - ISSUER_URI=http://tech5-authserver:10800
  #
  #   tech5-pedidos-app:
  #     image: 'tech5-pedidos-app:latest'
  #     build:
  #       context: ../tech5-pedidos-app
  #     container_name: tech5-pedidos-app
  #     ports:
  #        - 8083:8083
  #     depends_on:
  #        db:
  #          condition: service_healthy
  #     environment:
  #        - DATASOURCE_URL=jdbc:postgresql://db:5432/db_pedidos
  #        - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
  #        - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
  #        - API_PRODUTO_ENDPOINT=http://localhost:8081/api/produtos
  #        - ISSUER_URI=http://tech5-authserver:10800
  #
  #
  #   tech5-entregas-app:
  #     image: 'entregas-app:latest'
  #     build:
  #       context: ../tech5-entregas-app
  #     container_name: tech5-entregas-app
  #     ports:
  #       - 8084:8084
  #     depends_on:
  #       db:
  #         condition: service_healthy
  #     environment:
  #       - DATASOURCE_URL=jdbc:postgresql://db:5432/db_entregas
  #       - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
  #       - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
  #       - ISSUER_URI=http://tech5-authserver:10800
  #
  #   tech5-pagamentos-app:
  #     image: 'tech5-pagamentos:latest'
  #     build:
  #       context: ../tech5-pagamentos-app
  #     container_name: tech5-pagamentos-app
  #     ports:
  #       - 8085:8085
  #     depends_on:
  #       db:
  #         condition: service_healthy
  #     environment:
  #       - DATASOURCE_URL=jdbc:postgresql://db:5432/db_pagamentos
  #       - DATASOURCE_USERNAME=${DATASOURCE_USERNAME}
  #       - DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD}
  #       - ISSUER_URI=http://tech5-authserver:10800

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports:
      - 5432:5432
    networks:
      - spring-network
    environment:
      POSTGRES_USERNAME: ${DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${DATASOURCE_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: db_produtos, db_clientes, db_pedidos, db_entregas, db_pagamentos, db_authorization, db_sonarqube
    volumes:
      - ./scripts/multiple-databases.sh:/docker-entrypoint-initdb.d/multiple-databases.sh
      - ./postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube_security
    depends_on:
      db:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/db_sonarqube
      SONAR_JDBC_USERNAME: ${DATASOURCE_USERNAME}
      SONAR_JDBC_PASSWORD: ${DATASOURCE_PASSWORD}
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9090:9000"
    networks:
      - spring-network



  dtrack-apiserver:
    image: dependencytrack/apiserver
    deploy:
      resources:
        limits:
          memory: 12288m
        reservations:
          memory: 8192m
      restart_policy:
        condition: on-failure
    ports:
      - '9999:8080'
    volumes:
      - 'dependency-track:/data'
    restart: unless-stopped

  dtrack-frontend:
    image: dependencytrack/frontend
    depends_on:
      - dtrack-apiserver
    environment:
      - API_BASE_URL=http://localhost:9999
    ports:
      - "11000:8080"
    restart: unless-stopped

networks:
  spring-network:
    driver: bridge
    ipam:
      config:
        - subnet: "172.22.0.0/24"

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  dependency-track: