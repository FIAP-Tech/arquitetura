services:
   produtos-app:
      image: 'produtos-app:latest'
      build:
        context: ../produtos-app
      container_name: produtos-app
      ports:
        - 8080:8080
      depends_on:
        db:
          condition: service_healthy
      environment:
        - DATASOURCE_URL=jdbc:postgresql://db:5432/db_produtos
        - DATASOURCE_USERNAME=postgres
        - DATASOURCE_PASSWORD=teste123
        - AWS_DEFAULT_REGION=us-east-1
        - AWS_ACCESS_KEY=AKS
        - AWS_SECRET_KEY=AKS
        - AWS_ENDPOINT=http://localhost:4566

   clientes-app:
      image: 'clientes-app:latest'
      build:
        context: ../clientes-app
      container_name: clientes-app
      ports:
        - 8081:80
      depends_on:
        db:
          condition: service_healthy
      environment:
        - DATASOURCE_URL=jdbc:postgresql://db:5432/db_clientes
        - DATASOURCE_USERNAME=postgres
        - DATASOURCE_PASSWORD=teste123
        - AWS_DEFAULT_REGION=us-east-1
        - AWS_ACCESS_KEY=AKS
        - AWS_SECRET_KEY=AKS
        - AWS_ENDPOINT=http://localhost:4566
        - AWS_QUEUE=envia_emails

  pedidos-app:
    image: 'pedidos-app:latest'
    build:
      context: ../pedidos-app
   container_name: pedidos-app
    ports:
      - 8082:80
    depends_on:
      db:
        condition: service_healthy
    environment:
       - DATASOURCE_URL=jdbc:postgresql://db:5432/db_pedidos
       - DATASOURCE_USERNAME=postgres
       - DATASOURCE_PASSWORD=teste123
       - AWS_DEFAULT_REGION=us-east-1
       - AWS_ENDPOINT=http://localhost:4566
       - AWS_QUEUE=processa_pedidos

  entregas-app:
    image: 'entregas-app:latest'
    build:
      context: ../entregas-app
    container_name: entregas-app
    ports:
      - 8081:80
    depends_on:
      db:
        condition: service_healthy
    environment:
       - DATASOURCE_URL=jdbc:postgresql://db:5432/db_entregas
       - DATASOURCE_USERNAME=postgres
       - DATASOURCE_PASSWORD=teste123
       - AWS_DEFAULT_REGION=us-east-1
       - AWS_ACCESS_KEY_ID=AKS
       - AWS_SECRET_ACCESS_KEY=AKS
       - AWS_ENDPOINT=http://localhost:4566

  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: teste123
      POSTGRES_MULTIPLE_DATABASES: db_produtos, db_clientes, db_pedidos, keycloak
    volumes:
      - ./scripts/multiple-databases.sh:/docker-entrypoint-initdb.d/multiple-databases.sh
      - ./postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - '4566:4566' # LocalStack endpoint
      - '4510-4559:4510-4559' # external services port range
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=us-east-1
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=AKS
      - AWS_SECRET_ACCESS_KEY=AKS
    volumes:
      - ./script-localstack/init-dynamodb.sh:/etc/localstack/init/ready.d/init-dynamodb.sh
      - '/var/run/docker.sock:/var/run/docker.sock'

